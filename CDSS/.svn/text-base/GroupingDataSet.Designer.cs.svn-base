//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CDSS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GroupingDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GroupingDataSet : global::System.Data.DataSet {
        
        private ResultDataTableDataTable tableResultDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GroupingDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GroupingDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ResultDataTable"] != null)) {
                    base.Tables.Add(new ResultDataTableDataTable(ds.Tables["ResultDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ResultDataTableDataTable ResultDataTable {
            get {
                return this.tableResultDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GroupingDataSet cln = ((GroupingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ResultDataTable"] != null)) {
                    base.Tables.Add(new ResultDataTableDataTable(ds.Tables["ResultDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableResultDataTable = ((ResultDataTableDataTable)(base.Tables["ResultDataTable"]));
            if ((initTable == true)) {
                if ((this.tableResultDataTable != null)) {
                    this.tableResultDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GroupingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GroupingDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableResultDataTable = new ResultDataTableDataTable();
            base.Tables.Add(this.tableResultDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResultDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GroupingDataSet ds = new GroupingDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ResultDataTableRowChangeEventHandler(object sender, ResultDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ResultDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnColumn1;
            
            private global::System.Data.DataColumn columnColumn2;
            
            private global::System.Data.DataColumn columnCol3;
            
            private global::System.Data.DataColumn columnCol4;
            
            private global::System.Data.DataColumn columnCol5;
            
            private global::System.Data.DataColumn columnCol6;
            
            private global::System.Data.DataColumn columnCol7;
            
            private global::System.Data.DataColumn columnCol8;
            
            private global::System.Data.DataColumn columnCol9;
            
            private global::System.Data.DataColumn columnCol10;
            
            private global::System.Data.DataColumn columnCol11;
            
            private global::System.Data.DataColumn columnCol12;
            
            private global::System.Data.DataColumn columnCol13;
            
            private global::System.Data.DataColumn columnCol14;
            
            private global::System.Data.DataColumn columnCol15;
            
            private global::System.Data.DataColumn columnCol16;
            
            private global::System.Data.DataColumn columnCol17;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableDataTable() {
                this.TableName = "ResultDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ResultDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ResultDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column2Column {
                get {
                    return this.columnColumn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col3Column {
                get {
                    return this.columnCol3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col4Column {
                get {
                    return this.columnCol4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col5Column {
                get {
                    return this.columnCol5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col6Column {
                get {
                    return this.columnCol6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col7Column {
                get {
                    return this.columnCol7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col8Column {
                get {
                    return this.columnCol8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col9Column {
                get {
                    return this.columnCol9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col10Column {
                get {
                    return this.columnCol10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col11Column {
                get {
                    return this.columnCol11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col12Column {
                get {
                    return this.columnCol12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col13Column {
                get {
                    return this.columnCol13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col14Column {
                get {
                    return this.columnCol14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col15Column {
                get {
                    return this.columnCol15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col16Column {
                get {
                    return this.columnCol16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Col17Column {
                get {
                    return this.columnCol17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableRow this[int index] {
                get {
                    return ((ResultDataTableRow)(this.Rows[index]));
                }
            }
            
            public event ResultDataTableRowChangeEventHandler ResultDataTableRowChanging;
            
            public event ResultDataTableRowChangeEventHandler ResultDataTableRowChanged;
            
            public event ResultDataTableRowChangeEventHandler ResultDataTableRowDeleting;
            
            public event ResultDataTableRowChangeEventHandler ResultDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResultDataTableRow(ResultDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableRow AddResultDataTableRow(
                        string Column1, 
                        string Column2, 
                        string Col3, 
                        string Col4, 
                        string Col5, 
                        string Col6, 
                        string Col7, 
                        string Col8, 
                        string Col9, 
                        string Col10, 
                        string Col11, 
                        string Col12, 
                        string Col13, 
                        string Col14, 
                        string Col15, 
                        string Col16, 
                        string Col17) {
                ResultDataTableRow rowResultDataTableRow = ((ResultDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Column1,
                        Column2,
                        Col3,
                        Col4,
                        Col5,
                        Col6,
                        Col7,
                        Col8,
                        Col9,
                        Col10,
                        Col11,
                        Col12,
                        Col13,
                        Col14,
                        Col15,
                        Col16,
                        Col17};
                rowResultDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowResultDataTableRow);
                return rowResultDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ResultDataTableDataTable cln = ((ResultDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ResultDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnColumn1 = base.Columns["Column1"];
                this.columnColumn2 = base.Columns["Column2"];
                this.columnCol3 = base.Columns["Col3"];
                this.columnCol4 = base.Columns["Col4"];
                this.columnCol5 = base.Columns["Col5"];
                this.columnCol6 = base.Columns["Col6"];
                this.columnCol7 = base.Columns["Col7"];
                this.columnCol8 = base.Columns["Col8"];
                this.columnCol9 = base.Columns["Col9"];
                this.columnCol10 = base.Columns["Col10"];
                this.columnCol11 = base.Columns["Col11"];
                this.columnCol12 = base.Columns["Col12"];
                this.columnCol13 = base.Columns["Col13"];
                this.columnCol14 = base.Columns["Col14"];
                this.columnCol15 = base.Columns["Col15"];
                this.columnCol16 = base.Columns["Col16"];
                this.columnCol17 = base.Columns["Col17"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnColumn2 = new global::System.Data.DataColumn("Column2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn2);
                this.columnCol3 = new global::System.Data.DataColumn("Col3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol3);
                this.columnCol4 = new global::System.Data.DataColumn("Col4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol4);
                this.columnCol5 = new global::System.Data.DataColumn("Col5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol5);
                this.columnCol6 = new global::System.Data.DataColumn("Col6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol6);
                this.columnCol7 = new global::System.Data.DataColumn("Col7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol7);
                this.columnCol8 = new global::System.Data.DataColumn("Col8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol8);
                this.columnCol9 = new global::System.Data.DataColumn("Col9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol9);
                this.columnCol10 = new global::System.Data.DataColumn("Col10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol10);
                this.columnCol11 = new global::System.Data.DataColumn("Col11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol11);
                this.columnCol12 = new global::System.Data.DataColumn("Col12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol12);
                this.columnCol13 = new global::System.Data.DataColumn("Col13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol13);
                this.columnCol14 = new global::System.Data.DataColumn("Col14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol14);
                this.columnCol15 = new global::System.Data.DataColumn("Col15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol15);
                this.columnCol16 = new global::System.Data.DataColumn("Col16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol16);
                this.columnCol17 = new global::System.Data.DataColumn("Col17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCol17);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableRow NewResultDataTableRow() {
                return ((ResultDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ResultDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ResultDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ResultDataTableRowChanged != null)) {
                    this.ResultDataTableRowChanged(this, new ResultDataTableRowChangeEvent(((ResultDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ResultDataTableRowChanging != null)) {
                    this.ResultDataTableRowChanging(this, new ResultDataTableRowChangeEvent(((ResultDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ResultDataTableRowDeleted != null)) {
                    this.ResultDataTableRowDeleted(this, new ResultDataTableRowChangeEvent(((ResultDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ResultDataTableRowDeleting != null)) {
                    this.ResultDataTableRowDeleting(this, new ResultDataTableRowChangeEvent(((ResultDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResultDataTableRow(ResultDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GroupingDataSet ds = new GroupingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ResultDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ResultDataTableRow : global::System.Data.DataRow {
            
            private ResultDataTableDataTable tableResultDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ResultDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResultDataTable = ((ResultDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Column2 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Column2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column2\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Column2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col3 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col3\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col4 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col4\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col5 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col5\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col6 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col6\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col7 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col7\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col8 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col8\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col9 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col9\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col10 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col10\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col11 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col11\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col12 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col12\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col13 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col13\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col14 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col14\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col15 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col15\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col16 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col16\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Col17 {
                get {
                    try {
                        return ((string)(this[this.tableResultDataTable.Col17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Col17\' in table \'ResultDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableResultDataTable.Col17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableResultDataTable.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableResultDataTable.Column1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn2Null() {
                return this.IsNull(this.tableResultDataTable.Column2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn2Null() {
                this[this.tableResultDataTable.Column2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol3Null() {
                return this.IsNull(this.tableResultDataTable.Col3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol3Null() {
                this[this.tableResultDataTable.Col3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol4Null() {
                return this.IsNull(this.tableResultDataTable.Col4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol4Null() {
                this[this.tableResultDataTable.Col4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol5Null() {
                return this.IsNull(this.tableResultDataTable.Col5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol5Null() {
                this[this.tableResultDataTable.Col5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol6Null() {
                return this.IsNull(this.tableResultDataTable.Col6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol6Null() {
                this[this.tableResultDataTable.Col6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol7Null() {
                return this.IsNull(this.tableResultDataTable.Col7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol7Null() {
                this[this.tableResultDataTable.Col7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol8Null() {
                return this.IsNull(this.tableResultDataTable.Col8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol8Null() {
                this[this.tableResultDataTable.Col8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol9Null() {
                return this.IsNull(this.tableResultDataTable.Col9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol9Null() {
                this[this.tableResultDataTable.Col9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol10Null() {
                return this.IsNull(this.tableResultDataTable.Col10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol10Null() {
                this[this.tableResultDataTable.Col10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol11Null() {
                return this.IsNull(this.tableResultDataTable.Col11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol11Null() {
                this[this.tableResultDataTable.Col11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol12Null() {
                return this.IsNull(this.tableResultDataTable.Col12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol12Null() {
                this[this.tableResultDataTable.Col12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol13Null() {
                return this.IsNull(this.tableResultDataTable.Col13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol13Null() {
                this[this.tableResultDataTable.Col13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol14Null() {
                return this.IsNull(this.tableResultDataTable.Col14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol14Null() {
                this[this.tableResultDataTable.Col14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol15Null() {
                return this.IsNull(this.tableResultDataTable.Col15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol15Null() {
                this[this.tableResultDataTable.Col15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol16Null() {
                return this.IsNull(this.tableResultDataTable.Col16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol16Null() {
                this[this.tableResultDataTable.Col16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCol17Null() {
                return this.IsNull(this.tableResultDataTable.Col17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCol17Null() {
                this[this.tableResultDataTable.Col17Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ResultDataTableRowChangeEvent : global::System.EventArgs {
            
            private ResultDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableRowChangeEvent(ResultDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591